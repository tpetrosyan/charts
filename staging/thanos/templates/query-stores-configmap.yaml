{{ $ns := .Release.Namespace }}
{{ $sa := .Values.ServiceAccount }}
{{- if .Values.thanos.query.enabled }}
{{- range .Values.thanos.query.serviceDiscoveryFileConfigMaps }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ . }}
  namespace: {{ $ns }}
  labels:
    app: {{ include "thanos.name" . }}
    chart: {{ include "thanos.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation
data:
  stores.yaml: |-
    - targets: []
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ . }}-configmap-cleanup
  namespace: {{ $ns }}
  labels:
    app: {{ include "thanos.name" . }}
    chart: {{ include "thanos.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ . }}-configmap-cleanup
    spec:
      serviceAccountName: {{ $sa }}
      containers:
        - name: kubectl
          image: bitnami/kubectl:1.16.2
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - kubectl delete configmap {{ . }}
      restartPolicy: OnFailure
{{- end }}
{{- end }}